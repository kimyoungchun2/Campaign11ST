<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CampaignInfo">
  <resultMap type="com.skplanet.sascm.object.CampaignInfoBO" id="CampaignInfoBO">
    <result property="campaignname"        column="campaignname" />
    <result property="campaigncode"        column="campaigncode" />
    <result property="campaignid"          column="campaignid" />
    <result property="camp_term_cd"        column="camp_term_cd" />
    <result property="camp_bgn_dt"         column="camp_bgn_dt" />
    <result property="camp_bgn_tm"         column="camp_bgn_tm" />
    <result property="camp_bgn_dt1"        column="camp_bgn_dt1" />
    <result property="camp_bgn_dt2"        column="camp_bgn_dt2" />
    <result property="camp_bgn_dt3"        column="camp_bgn_dt3" />
    <result property="camp_end_dt"         column="camp_end_dt" />
    <result property="camp_end_tm"         column="camp_end_tm" />
    <result property="camp_end_dt1"        column="camp_end_dt1" />
    <result property="camp_end_dt2"        column="camp_end_dt2" />
    <result property="camp_end_dt3"        column="camp_end_dt3" />
    <result property="camp_term_day"       column="camp_term_day" />
    <result property="audience_cd"         column="audience_cd" />
    <result property="audience_nm"         column="audience_nm" />
    <result property="manual_trans_yn"     column="manual_trans_yn" />
    <result property="manual_trans_nm"     column="manual_trans_nm" />
    <result property="offer_direct_yn"     column="offer_direct_yn" />
    <result property="channel_priority_yn" column="channel_priority_yn" />
    <result property="camp_status_cd"      column="camp_status_cd" />
    <result property="create_id"           column="create_id" />
    <result property="create_nm"           column="create_nm" />
    <result property="create_dt"           column="create_dt" />
    <result property="update_id"           column="update_id" />
    <result property="update_nm"           column="update_nm" />
    <result property="update_dt"           column="update_dt" />
    <result property="channelCnt"          column="channelCnt" />

    <result property="campaigngubun"       column="campaigngubun" />
    <result property="campaigntype"        column="campaigntype" />
    <result property="senddatetype"        column="senddatetype" />

    <result property="campaign_period"     column="campaign_period" />
    <result property="camp_from_dt"        column="camp_from_dt" />
    <result property="camp_to_dt"          column="camp_to_dt" />
    <result property="camp_from_tm"          column="camp_from_tm" />
    <result property="camp_to_tm"          column="camp_to_tm" />

    <result property="send_day"            column="send_day" />
    <result property="target_id"           column="target_id" />
    <result property="offer_auto_yn"       column="offer_auto_yn" />
    <result property="channel_batch_rank_yn"     column="channel_batch_rank_yn" />

    <result property="campaign_detail"           column="campaign_detail" />
    <result property="campaign_offer_cost_gubun" column="campaign_offer_cost_gubun" />
    <result property="campaign_gubun_dtl" column="campaign_gubun_dtl" />

   </resultMap>
    <resultMap type="com.skplanet.sascm.object.CampaignListBO" id="CampaignListBO">
    <result property="campaignid"              column="campaignid" />
    <result property="campaigncd"              column="campaigncd" />
    <result property="campaign_status_cd"       column="campaign_status_cd" />
    <result property="campaign_version_no"      column="campaign_version_no" />
    <result property="current_version_flg"      column="current_version_flg" />
    <result property="campaignnm"               column="campaignnm" />
    <result property="campaign_desc"            column="campaign_desc" />
    <result property="campaign_folder_txt"      column="campaign_folder_txt" />
    <result property="campaign_owner_nm"        column="campaign_owner_nm" />
    <result property="campaign_group_sk"        column="campaign_group_sk" />
    <result property="deployment_version_no"    column="deployment_version_no" />
    <result property="min_budget_offer_amt"     column="min_budget_offer_amt" />
    <result property="max_budget_offer_amt"     column="max_budget_offer_amt" />
    <result property="min_budget_amt"           column="min_budget_amt" />
    <result property="max_budget_amt"           column="max_budget_amt" />
    <result property="start_dttm"               column="start_dttm" />
    <result property="end_dttm"                 column="end_dttm" />
    <result property="run_dttm"                 column="run_dttm" />
    <result property="last_modified_dttm"       column="last_modified_dttm" />
    <result property="last_modified_by_user_nm" column="last_modified_by_user_nm" />
    <result property="approval_dttm"            column="approval_dttm" />
    <result property="approval_given_by_nm"     column="approval_given_by_nm" />
    <result property="business_context_nm"      column="business_context_nm" />
    <result property="campaign_type_cd"         column="campaign_type_cd" />
    <result property="deleted_flg"              column="deleted_flg" />
        <result property="processed_dttm"           column="processed_dttm" />
        <result property="id"                       column="id" />
        <result property="name"                     column="name" />
        <result property="pid"                      column="pid" />
        <result property="cnt"                      column="cnt" />
   </resultMap>

  <resultMap type="com.skplanet.sascm.object.CampaignOfferBO" id="CampaignOfferBO">
    <result property="communication_sk"    column="communication_sk" />
    <result property="offer_content_id"    column="ffer_content_id" />
    <result property="offer_content_nm"    column="offer_content_nm" />

    <result property="campaignid"          column="campaignid" />
    <result property="campaignname"        column="campaignname" />
    <result property="campaigncode"        column="campaigncode" />
    <result property="audience_cd"         column="audience_cd" />
    <result property="manual_trans_yn"     column="manual_trans_yn" />
    <result property="offer_direct_yn"     column="offer_direct_yn" />
    <result property="channel_priority_yn" column="channel_priority_yn" />
    <result property="camp_status_cd"      column="camp_status_cd" />
    <result property="flowchartid"         column="flowchartid" />
    <result property="flowchartname"       column="flowchartname" />
    <result property="flowchartrow"        column="flowchartrow" />
    <result property="filename"            column="filename" />
    <result property="status"              column="status" />
    <result property="cellid"              column="cellid" />
    <result property="cellrow"             column="cellrow" />
    <result property="cellname"            column="cellname" />
    <result property="cellcode"            column="cellcode" />
    <result property="offerlistid"         column="offerlistid" />
    <result property="offerid"             column="offerid" />
    <result property="offername"           column="offername" />
    <result property="offercode1"          column="offercode1" />
    <result property="offer_type_cd"       column="offer_type_cd" />
    <result property="offer_sys_cd"        column="offer_sys_cd" />
    <result property="disp_name"           column="disp_name" />
    <result property="tmpl_cupn_no"        column="tmpl_cupn_no" />
        <result property="tmpl_cupn_no_use_yn" column="tmpl_cupn_no_use_yn" />
        <result property="offer_amt"           column="offer_amt" />
        <result property="create_id"           column="create_id" />
        <result property="create_nm"           column="create_nm" />
        <result property="create_dt"           column="create_dt" />
        <result property="update_id"           column="update_id" />
        <result property="update_nm"           column="update_nm" />
        <result property="update_dt"           column="update_dt" />
   </resultMap>

  <resultMap type="com.skplanet.sascm.object.CampaignRptSumSalesBO" id="CampaignRptSumSalesBO">
    <result property="camp_bgn_dt"           column="camp_bgn_dt" />
    <result property="sale_amt"              column="sale_amt" />
  </resultMap>

  <resultMap type="com.skplanet.sascm.object.CampaignRptRsltCrmMonthBO" id="CampaignRptRsltCrmMonthBO">
    <result property="std_mon"               column="std_mon" />
    <result property="cust_goal"             column="cust_goal" />
    <result property="amt_goal"              column="amt_goal" />
    <result property="dis_goal"              column="dis_goal" />
    <result property="pure_amt_goal"         column="pure_amt_goal" />
  </resultMap>

  <resultMap type="com.skplanet.sascm.object.CampaignRptPtCrmMonthBO" id="CampaignRptPtCrmMonthBO">
    <result property="std_mon"           column="std_mon" />
    <result property="pt_cust_cnt"       column="pt_cust_cnt" />
    <result property="tot_cust_cnt"      column="tot_cust_cnt" />
    <result property="pt_cmpn_amt"       column="pt_cmpn_amt" />
    <result property="tot_amt"           column="tot_amt" />
    <result property="pt_cmpn_cost"      column="pt_cmpn_cost" />
    <result property="tot_dc_amt"        column="tot_dc_amt" />
    <result property="pt_cost_ratio"     column="pt_cost_ratio" />
    <result property="tot_ratio"         column="tot_ratio" />
    <result property="pt_net_amt"        column="pt_net_amt" />
    <result property="tot_net_amt"       column="tot_net_amt" />
    <result property="create_dt"         column="create_dt" />
  </resultMap>

  <!-- 캠페인 정보 조회 -->
  <select id="CampaignInfo.getCampaignInfo" parameterType="Map"  resultMap="CampaignInfoBO">
    SELECT DISTINCT
       A.CAMPAIGN_NM                          campaignname
      ,A.CAMPAIGN_CD                        campaigncode
      ,A.CAMPAIGN_SK                      campaignid
      ,B.CAMP_TERM_CD                     camp_term_cd
      ,B.CAMP_BGN_DT                      camp_bgn_dt
            ,TO_CHAR(B.CAMP_BGN_DT,'YYYY-MM-DD')    camp_bgn_dt1
            ,TO_CHAR(B.CAMP_BGN_DT,'HH24')          camp_bgn_dt2
            ,TO_CHAR(B.CAMP_BGN_DT,'MI')            camp_bgn_dt3
      ,B.CAMP_END_DT                      camp_end_dt
      ,TO_CHAR(B.CAMP_END_DT,'YYYY-MM-DD')    camp_end_dt1
      ,TO_CHAR(B.CAMP_END_DT,'HH24')      camp_end_dt2
      ,TO_CHAR(B.CAMP_END_DT,'MI')        camp_end_dt3
      ,B.CAMP_TERM_DAY                    camp_term_day
      ,B.AUDIENCE_CD                      audience_cd
      ,（SELECT CODE_NAME FROM CM_CODE_DTL WHERE COMM_CODE_ID = 'C004' AND CODE_ID =  B.AUDIENCE_CD）  audience_nm
      ,B.MANUAL_TRANS_YN                      manual_trans_yn
      ,（SELECT CODE_NAME FROM CM_CODE_DTL WHERE COMM_CODE_ID = 'G003' AND CODE_ID =  B.MANUAL_TRANS_YN）  manual_trans_nm
      ,B.OFFER_DIRECT_YN                  offer_direct_yn
      ,B.CHANNEL_PRIORITY_YN              channel_priority_yn
      ,B.CAMP_STATUS_CD                   camp_status_cd
      ,B.CREATE_ID                        create_id
      ,(SELECT USER_NAME FROM CM_USER WHERE ID = B.CREATE_ID) create_nm
      ,TO_CHAR(B.CREATE_DT, 'YYYY-MM-DD HH24:MI:SS')  create_dt
      ,B.UPDATE_ID                        update_id
      ,(SELECT USER_NAME FROM CM_USER WHERE ID = B.UPDATE_ID) update_nm
      ,TO_CHAR(B.UPDATE_DT, 'YYYY-MM-DD HH24:MI:SS')  update_dt
    FROM CI_CAMPAIGN        A
        ,CM_CAMPAIGN_DTL B
     WHERE A.CAMPAIGN_SK = B.CAMPAIGNID(+)
       AND A.CAMPAIGN_SK = #{CAMPAIGNID}
  </select>

  <select id="CampaignInfo.getCampaignInfoSummary" parameterType="Map"  resultMap="CampaignInfoBO">
     SELECT  CMPGN_ID                       AS CAMPAIGNID
           , MAX(CMPGN_NM)                  AS CAMPAIGNNAME
           , MAX(CMPGN_CD)                  AS CAMPAIGNCODE
           , MAX(CAMPAIGN_GUBUN)            AS CAMPAIGNGUBUN
           , MAX(CAMPAIGN_DETAIL)                        AS CAMPAIGN_DETAIL
           , MAX(CAMPAIGN_OFFER_COST_GUBUN)   AS CAMPAIGN_OFFER_COST_GUBUN
           , MAX(CAMPAIGN_TYPE)             AS CAMPAIGNTYPE
           , MAX(SENDDATE_TYPE)             AS SENDDATETYPE
       FROM (
            SELECT  A.CAMPAIGN_SK                                                      AS CMPGN_ID                       /* 캠페인ID     */
                  , A.CAMPAIGN_NM                                                      AS CMPGN_NM                       /* 캠페인명     */
                  , A.CAMPAIGN_CD                                                      AS CMPGN_CD                       /* 캠페인코드     */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) = '1. 데이터 전송방식' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS SENDDATE_TYPE                  /* 데이터 전송방식 */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) = '1. 캠페인 구분' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_GUBUN                  /* 캠페인 구분 */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) IN ( '내부 상세', '외부 상세' ) THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_DETAIL                  /* 캠페인 상세 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'CAMPAIGN_OFFER_COST_GUBUN' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_OFFER_COST_GUBUN    /* 캠페인 목적 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'CAMPAIGN_TYPE' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_TYPE                   /* 캠페인 종류 */

                  , A.CAMPAIGN_DESC                                                 AS CMPGN_DESC                          /* 캠페인설명   */
                  , A.LAST_MODIFIED_BY_USER_NM                                   AS REQ_EMP_ID                           /* 마자막 캠페인 실행자       */
              FROM CI_CAMPAIGN                  A
                   LEFT JOIN
                   CI_CAMP_PAGE_CHAR_UDF        B
                ON A.CAMPAIGN_SK = B.CAMPAIGN_SK
                   LEFT JOIN
                   CI_CAMP_PAGE_NUM_UDF         C
                ON A.CAMPAIGN_SK = C.CAMPAIGN_SK
                   LEFT JOIN
                   CI_CAMP_PAGE_DATE_UDF        D
                ON A.CAMPAIGN_SK = D.CAMPAIGN_SK
                   LEFT JOIN
                   CI_MARKETING_CELL            F
                ON A.CAMPAIGN_SK = F.CAMPAIGN_SK
             WHERE A.CAMPAIGN_SK = #{CAMPAIGNID}

          )
      GROUP BY  CMPGN_ID

  </select>


  <!-- 캠페인 정보 저장 -->
  <update id="CampaignInfo.setCampaignInfo" parameterType="Map" >
    MERGE INTO CM_CAMPAIGN_DTL
    USING DUAL
    ON (CAMPAIGNCODE = #{CAMPAIGNCODE})
    WHEN MATCHED THEN
    UPDATE SET CAMP_TERM_CD        = TRIM(#{CAMP_TERM_CD})
              ,CAMP_BGN_DT         = CASE WHEN #{CAMP_TERM_CD} = '01' THEN TO_DATE(#{CAMP_BGN_DT1} || LPAD(#{CAMP_BGN_DT2}, 2,'0') || LPAD(#{CAMP_BGN_DT3}, 2,'0') || '00', 'YYYY-MM-DDHH24MISS') ELSE NULL END
              ,CAMP_END_DT         = CASE WHEN #{CAMP_TERM_CD} = '01' THEN TO_DATE(#{CAMP_END_DT1} || LPAD(#{CAMP_END_DT2}, 2,'0') || LPAD(#{CAMP_END_DT3}, 2,'0') || '59', 'YYYY-MM-DDHH24MISS') ELSE NULL END
              ,CAMP_TERM_DAY       = CASE WHEN #{CAMP_TERM_CD} = '02' THEN #{CAMP_TERM_DAY} ELSE NULL END
              ,AUDIENCE_CD         = TRIM(#{AUDIENCE_CD})
              ,MANUAL_TRANS_YN     = TRIM(#{MANUAL_TRANS_YN})
              ,OFFER_DIRECT_YN     = TRIM(#{OFFER_DIRECT_YN})
              ,CHANNEL_PRIORITY_YN = TRIM(#{CHANNEL_PRIORITY_YN})
              ,UPDATE_ID           = TRIM(#{UPDATE_ID})
              ,UPDATE_DT           = SYSDATE
    WHEN NOT MATCHED THEN
    INSERT (
       CAMPAIGNCODE
      ,CAMPAIGNID
      ,CAMP_TERM_CD
      ,CAMP_BGN_DT
      ,CAMP_END_DT
      ,CAMP_TERM_DAY
      ,AUDIENCE_CD
      ,MANUAL_TRANS_YN
      ,OFFER_DIRECT_YN
      ,CHANNEL_PRIORITY_YN
      ,CAMP_STATUS_CD
      ,CREATE_ID
      ,CREATE_DT
    )
    VALUES (
       TRIM(#{CAMPAIGNCODE})
      ,TRIM(#{CAMPAIGNID})
      ,TRIM(#{CAMP_TERM_CD})
      ,CASE WHEN #{CAMP_TERM_CD} = '01' THEN TO_DATE(#{CAMP_BGN_DT1} || LPAD(#{CAMP_BGN_DT2}, 2,'0') || LPAD(#{CAMP_BGN_DT3}, 2,'0') || '00', 'YYYY-MM-DDHH24MISS') ELSE NULL END
      ,CASE WHEN #{CAMP_TERM_CD} = '01' THEN TO_DATE(#{CAMP_END_DT1} || LPAD(#{CAMP_END_DT2}, 2,'0') || LPAD(#{CAMP_END_DT3}, 2,'0') || '59', 'YYYY-MM-DDHH24MISS') ELSE NULL END
      ,CASE WHEN #{CAMP_TERM_CD} = '02' THEN #{CAMP_TERM_DAY} ELSE NULL END
      ,TRIM(#{AUDIENCE_CD})
      ,TRIM(#{MANUAL_TRANS_YN})
      ,TRIM(#{OFFER_DIRECT_YN})
      ,TRIM(#{CHANNEL_PRIORITY_YN})
      ,'EDIT'
      ,TRIM(#{CREATE_ID})
      ,SYSDATE
    )
  </update>


  <!-- 채널의 우선순위 수정 -->
  <update id="CampaignInfo.setChannelPriority" parameterType="Map" >
      UPDATE CM_CAMPAIGN_CHANNEL
         SET TOAST_PRIORITY_RNK  = CASE WHEN TOAST_PRIORITY_RNK  IS NOT NULL THEN #{PRIORITY_RNK} ELSE TOAST_PRIORITY_RNK  END
            ,SMS_PRIORITY_RNK    = CASE WHEN SMS_PRIORITY_RNK    IS NOT NULL THEN #{PRIORITY_RNK} ELSE SMS_PRIORITY_RNK    END
          ,EMAIL_PRIORITY_RNK  = CASE WHEN EMAIL_PRIORITY_RNK  IS NOT NULL THEN #{PRIORITY_RNK} ELSE EMAIL_PRIORITY_RNK  END
          ,MOBILE_PRIORITY_RNK = CASE WHEN MOBILE_PRIORITY_RNK IS NOT NULL THEN #{PRIORITY_RNK} ELSE MOBILE_PRIORITY_RNK END
         WHERE CELLID IN (SELECT CELL_PACKAGE_SK FROM CI_CELL_PACKAGE WHERE CAMPAIGN_SK = #{CAMPAIGNID} AND ( CONTROL_GROUP_TYPE_CD IS NULL OR CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
 )
  </update>


  <!-- 캠페인 오퍼 리스트 -->
  <select id="CampaignInfo.getCampaignOfferList" parameterType="Map" resultMap="CampaignOfferBO">
          SELECT DISTINCT
                 T3.CAMPAIGN_SK                            AS      CAMPAIGNID
               , T3.CAMPAIGN_CD                            AS      CAMPAIGNCODE
               , T3.CAMPAIGN_NM                            AS      CAMPAIGNNAME
               , T3.MARKETING_CELL_SK                   AS      CELLID
               , T3.MARKETING_CELL_NM                   AS      CELLNAME
               , T3.MARKETING_CELL_CD                   AS      CELLCODE
               , T3.COMMUNICATION_SK                    AS      COMMUNICATION_SK
               , T3.OFFER_CONTENT_ID                    AS      OFFER_CONTENT_ID
               , T3.OFFER_CONTENT_NM                    AS      OFFER_CONTENT_NM
               , T3.OFFER_SYS_CD                        AS      OFFER_SYS_CD
               , T2.OFFER_TYPE_CD                       AS      OFFER_TYPE_CD
               , T2.OFFER_ID                                   AS      OFFERID
               , (SELECT CODE_NAME FROM CM_CODE_DTL WHERE COMM_CODE_ID = T2.OFFER_TYPE_CD AND CODE_ID = T2.OFFER_DETAIL_CD)    AS   OFFERNAME
               , T1.DISP_NAME                                  AS DISP_NAME
               , T1.OFFER_AMT                                  AS OFFER_AMT
               , T1.CREATE_ID                                  AS CREATE_ID
               , (SELECT USER_NAME FROM CM_USER WHERE ID = T1.CREATE_ID) CREATE_NM
               , T1.CREATE_DT                                  AS CREATE_DT
               , T1.UPDATE_ID                                  AS UPDATE_ID
               , (SELECT USER_NAME FROM CM_USER WHERE ID = T1.UPDATE_ID) UPDATE_NM
               , T1.UPDATE_DT                                        UPDATE_DT
               , T4.AUDIENCE_CD                                AS AUDIENCE_CD
               , T4.MANUAL_TRANS_YN                            AS MANUAL_TRANS_YN
               , T4.OFFER_DIRECT_YN                            AS OFFER_DIRECT_YN
               , T4.CHANNEL_PRIORITY_YN                        AS CHANNEL_PRIORITY_YN
               , T4.CAMP_STATUS_CD                             AS CAMP_STATUS_CD
             FROM (
                  SELECT CAMPAIGN_SK
                       , CAMPAIGN_CD
                       , CAMPAIGN_NM
                       , MARKETING_CELL_SK
                       , MARKETING_CELL_NM
                       , MARKETING_CELL_CD
                       , MAX(COMMUNICATION_SK)       AS      COMMUNICATION_SK
                       , MAX(OFFER_SYS_CD)              AS      OFFER_SYS_CD
                       , MAX(OFFER_CONTENT_ID)        AS      OFFER_CONTENT_ID
                       , MAX(OFFER_CONTENT_NM)       AS      OFFER_CONTENT_NM
                    FROM (
                         SELECT DISTINCT
                                T6.CAMPAIGN_SK
                              , T6.CAMPAIGN_CD
                              , T6.CAMPAIGN_NM
                              , T6.MARKETING_CELL_SK
                              , T6.MARKETING_CELL_NM
                              , T6.MARKETING_CELL_CD
                              , T6.COMMUNICATION_SK
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_SYS_CD
                              , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_ID
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_NM
                           FROM CI_CELL_PACKAGE T6
                           LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                             ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                           LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                             ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                      WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                            AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                           FROM CI_COMMUNICATION
                                                          WHERE DELETED_FLG = 'N' )
                            AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                         )
                         GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, CAMPAIGN_NM
                                       , MARKETING_CELL_SK, MARKETING_CELL_NM, MARKETING_CELL_CD
             )  T3
             LEFT JOIN CM_CAMPAIGN_CONTENTS_OFFERLIST T2
               ON T3.OFFER_CONTENT_ID = T2.OFFER_CONTENT_ID
             LEFT JOIN CM_CAMPAIGN_OFFER T1
               ON T3.MARKETING_CELL_SK = T1.CELLID
             AND T2.OFFER_ID = T1.OFFERID
             AND T3.OFFER_CONTENT_ID = T1.OFFER_CONTENT_ID
             LEFT JOIN CM_CAMPAIGN_DTL T4
               ON T3.CAMPAIGN_SK  = T4.CAMPAIGNID
       ORDER BY T3.OFFER_CONTENT_ID
  </select>


  <!-- 대상수준이 PCID일경우 오퍼의 사용여부를 체크한다 -->
  <select id="CampaignInfo.getCampaignOfferUseChk" parameterType="Map" resultType="String">
    SELECT DISTINCT  CASE WHEN COUNT(0) != 0 THEN 'Y' ELSE 'N' END offerChk
        FROM
        (
          SELECT DISTINCT
                 T3.CAMPAIGN_CD                            AS      CAMPAIGNCODE
               , T3.MARKETING_CELL_SK                   AS      CELLID
               , T3.OFFER_SYS_CD
               , T2.OFFER_TYPE_CD
               , T2.OFFER_ID                                   AS      OFFERID
             FROM (
                  SELECT CAMPAIGN_SK
                       , CAMPAIGN_CD
                       , CAMPAIGN_NM
                       , MARKETING_CELL_SK
                       , MARKETING_CELL_NM
                       , MARKETING_CELL_CD
                       , MAX(COMMUNICATION_SK)       AS      COMMUNICATION_SK
                       , MAX(OFFER_SYS_CD)              AS      OFFER_SYS_CD
                       , MAX(OFFER_CONTENT_ID)        AS      OFFER_CONTENT_ID
                       , MAX(OFFER_CONTENT_NM)       AS      OFFER_CONTENT_NM
                    FROM (
                         SELECT DISTINCT
                                T6.CAMPAIGN_SK
                              , T6.CAMPAIGN_CD
                              , T6.CAMPAIGN_NM
                              , T6.MARKETING_CELL_SK
                              , T6.MARKETING_CELL_NM
                              , T6.MARKETING_CELL_CD
                              , T6.COMMUNICATION_SK
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_SYS_CD
                              , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_ID
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_NM
                           FROM CI_CELL_PACKAGE T6
                           LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                             ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                           LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                             ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                      WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                            AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                           FROM CI_COMMUNICATION
                                                          WHERE DELETED_FLG = 'N' )
                            AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                         )
                         GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, CAMPAIGN_NM
                                       , MARKETING_CELL_SK, MARKETING_CELL_NM, MARKETING_CELL_CD
             )  T3
             LEFT JOIN CM_CAMPAIGN_CONTENTS_OFFERLIST T2
               ON T3.OFFER_CONTENT_ID = T2.OFFER_CONTENT_ID
             LEFT JOIN CM_CAMPAIGN_OFFER T1
               ON T3.MARKETING_CELL_SK = T1.CELLID
             AND T2.OFFER_ID = T1.OFFERID
             AND T3.OFFER_CONTENT_ID = T1.OFFER_CONTENT_ID
             LEFT JOIN CM_CAMPAIGN_DTL T4
               ON T3.CAMPAIGN_SK  = T4.CAMPAIGNID
        ) T3
  </select>



  <!-- 사용자 권한이 N일 경우에만 더미오퍼 사용가능 -->
  <select id="CampaignInfo.getCampaignChannelValiChk2" parameterType="Map" resultType="String">

    SELECT  CASE WHEN CNT = 0 THEN 'Y'  WHEN USER_NAME = 'N' THEN 'Y' ELSE 'N' END VALI
      FROM
        (
          SELECT COUNT(0) AS CNT
          FROM
          (
                  SELECT CAMPAIGN_SK
                       , CAMPAIGN_CD
                       , CAMPAIGN_NM
                       , MARKETING_CELL_SK
                       , MARKETING_CELL_NM
                       , MARKETING_CELL_CD
                       , MAX(COMMUNICATION_SK)       AS      COMMUNICATION_SK
                       , MAX(OFFER_SYS_CD)              AS      OFFER_SYS_CD
                       , MAX(OFFER_CONTENT_ID)        AS      OFFER_CONTENT_ID
                       , MAX(OFFER_CONTENT_NM)       AS      OFFER_CONTENT_NM
                    FROM (
                         SELECT DISTINCT
                                T6.CAMPAIGN_SK
                              , T6.CAMPAIGN_CD
                              , T6.CAMPAIGN_NM
                              , T6.MARKETING_CELL_SK
                              , T6.MARKETING_CELL_NM
                              , T6.MARKETING_CELL_CD
                              , T6.COMMUNICATION_SK
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_SYS_CD
                              , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_ID
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_NM
                           FROM CI_CELL_PACKAGE T6
                           LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                             ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                           LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                             ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                      WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                            AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                           FROM CI_COMMUNICATION
                                                          WHERE DELETED_FLG = 'N' )
                            AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                         )
                         GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, CAMPAIGN_NM
                                       , MARKETING_CELL_SK, MARKETING_CELL_NM, MARKETING_CELL_CD
          ) T4
          WHERE T4.CAMPAIGN_SK = ${CAMPAIGNID}
        ) T3
        ,(
             SELECT  nvl(USER_NAME, (SELECT CODE_ID FROM CM_CODE_DTL WHERE COMM_CODE_ID = 'C007' AND ROWNUM = 1 AND USE_YN = 'Y' )) USER_NAME
               FROM CM_USER
              WHERE ID = #{USER_ID}
          ) B

  </select>

  <!-- 대상수준이 DEVICEID일경우 오퍼의 사용여부를 체크한다 -->
  <select id="CampaignInfo.getCampaignChannelValiChkforDeviceId" parameterType="Map" resultType="String">
      SELECT CASE WHEN COUNT(0) != 0 THEN 'Y' ELSE 'N' END offerChk
      FROM
        (
          SELECT COUNT(0) AS CNT
          FROM
          (
                  SELECT CAMPAIGN_SK
                       , CAMPAIGN_CD
                       , CAMPAIGN_NM
                       , MARKETING_CELL_SK
                       , MARKETING_CELL_NM
                       , MARKETING_CELL_CD
                       , MAX(COMMUNICATION_SK)       AS      COMMUNICATION_SK
                       , MAX(OFFER_SYS_CD)              AS      OFFER_SYS_CD
                       , MAX(OFFER_CONTENT_ID)        AS      OFFER_CONTENT_ID
                       , MAX(OFFER_CONTENT_NM)       AS      OFFER_CONTENT_NM
                    FROM (
                         SELECT DISTINCT
                                T6.CAMPAIGN_SK
                              , T6.CAMPAIGN_CD
                              , T6.CAMPAIGN_NM
                              , T6.MARKETING_CELL_SK
                              , T6.MARKETING_CELL_NM
                              , T6.MARKETING_CELL_CD
                              , T6.COMMUNICATION_SK
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_SYS_CD
                              , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_ID
                              , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                     ELSE NULL
                                END AS OFFER_CONTENT_NM
                           FROM CI_CELL_PACKAGE T6
                           LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                             ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                           LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                             ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                      WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                            AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                           FROM CI_COMMUNICATION
                                                          WHERE DELETED_FLG = 'N' )
                            AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                         )
                         GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, CAMPAIGN_NM
                                       , MARKETING_CELL_SK, MARKETING_CELL_NM, MARKETING_CELL_CD

          ) T4
          WHERE T4.CAMPAIGN_SK = #{CAMPAIGNID}
        ) T3
  </select>


  <!-- 채널의 발송시간 수정 -->
  <update id="CampaignInfo.setChannelDispTime" parameterType="Map" >
      UPDATE CM_CAMPAIGN_CHANNEL
         SET SMS_DISP_TIME = NULL
            ,EMAIL_DISP_TIME = NULL
            ,MOBILE_DISP_TIME = NULL
            ,LMS_DISP_TIME = NULL
         WHERE CELLID IN (SELECT CELL_PACKAGE_SK FROM CI_CELL_PACKAGE WHERE CAMPAIGN_SK = #{CAMPAIGNID} AND ( CONTROL_GROUP_TYPE_CD IS NULL OR CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )  )
  </update>
  <select id="CampaignInfo.getCampaignFolderList" parameterType="Map" resultMap="CampaignListBO">

    SELECT
      CAMPAIGN_FOLDER_TXT
      , NVL(LENGTH(CAMPAIGN_FOLDER_TXT)-LENGTH(REPLACE(CAMPAIGN_FOLDER_TXT, '\', '')), 0) CNT
    FROM
      CI_CAMPAIGN
    WHERE
      DELETED_FLG ='N'
      <if test="serverType == 'PRD'">
        <![CDATA[ AND CAMPAIGN_SK >= 10000 ]]>
      </if>
      <if test="serverType == 'STG'">
        <![CDATA[ AND CAMPAIGN_SK < 10000 ]]>
      </if>
      <if test="serverType == 'DEV'">
        <![CDATA[ AND CAMPAIGN_SK < 10000 ]]>
      </if>
    GROUP BY
      CAMPAIGN_FOLDER_TXT
    ORDER BY
      CAMPAIGN_FOLDER_TXT

  </select>
  <select id="CampaignInfo.getCampaignList" parameterType="Map" resultMap="CampaignListBO">
     SELECT CAMPAIGN_NM campaignnm,
              CAMPAIGN_DESC campaign_desc,
              CAMPAIGN_CD campaigncd,
              CAMPAIGN_SK campaignid,
              CAMPAIGN_OWNER_NM campaign_owner_nm,
              RUN_DTTM run_dttm
         FROM CI_CAMPAIGN
         WHERE TO_CHAR(CAMPAIGN_FOLDER_TXT)  LIKE '%'||#{treeValue}||'%' AND DELETED_FLG ='N'
          <if test='serverType == "PRD"'>
            <![CDATA[ AND CAMPAIGN_SK >= 10000 ]]>
          </if>
          <if test='serverType == "STG"'>
            <![CDATA[ AND CAMPAIGN_SK < 10000 ]]>
          </if>
          <if test='serverType == "DEV"'>
            <![CDATA[ AND CAMPAIGN_SK < 10000 ]]>
          </if>
         ORDER BY CAMPAIGN_SK DESC
  </select>

  <select id="CampaignInfo.getCICampaignProperty" parameterType="Map" resultMap="CampaignInfoBO">

       SELECT  CMPGN_ID                     AS CAMPAIGNID
           , MAX(CMPGN_NM)                  AS CAMPAIGNNAME                    /* 캠페인명     */
           , MAX(CMPGN_CD)                  AS CAMPAIGNCODE                    /* 캠페인코드     */
           , MAX(CAMPAIGN_PERIOD)           AS CAMPAIGN_PERIOD                 /* 1. 캠페인기간 ( 그룹1 : 특정일자 및 시간  ,  그룹2 : 전송일로부터의 일수   )*/
           , MAX(CAMP_FROM_DT)              AS CAMP_FROM_DT                    /* 캠페인행사시작일자 */
           , MAX(CAMP_TO_DT)                AS CAMP_TO_DT                      /* 캠페인행사종료일자 */

           , NVL(MAX(CAMP_FROM_TM), 'AM 00:00')              AS CAMP_FROM_TM                    /* 캠페인행사시작시간 */
           , NVL(MAX(CAMP_TO_TM), 'PM 11:59')                AS CAMP_TO_TM                      /* 캠페인행사종료시간 */

           , MAX(SEND_DAY)                  AS SEND_DAY                        /* 전송일로부터의 일수 */
           , MAX(TARGET_ID)                 AS TARGET_ID                       /* 대상수준 */
           , MAX(SENDDATE_TYPE)             AS SENDDATETYPE                    /* 데이터 전송방식 */
           , MAX(OFFER_AUTO_YN)             AS OFFER_AUTO_YN                   /* 오퍼 자동적용여부 */
           , MAX(CHANNEL_BATCH_RANK_YN)     AS CHANNEL_BATCH_RANK_YN           /* 채널우선순위 */
           , MAX(CAMPAIGN_GUBUN)            AS CAMPAIGNGUBUN                   /* 캠페인 구분 */
           , MAX(CAMPAIGN_GUBUN_DTL)        AS CAMPAIGN_GUBUN_DTL                   /* 캠페인 구분 상세  */
           , MAX(CAMPAIGN_TYPE)             AS CAMPAIGNTYPE                    /* 캠페인 유형 */
           , MAX(CAMPAIGN_OFFER_COST_GUBUN)             AS CAMPAIGN_OFFER_COST_GUBUN                    /* 캠페인 오퍼 비용 구분 */
       FROM (
            SELECT  A.CAMPAIGN_SK                                                      AS CMPGN_ID                       /* 캠페인ID     */
                  , A.CAMPAIGN_NM                                                      AS CMPGN_NM                       /* 캠페인명     */
                  , A.CAMPAIGN_CD                                                      AS CMPGN_CD                       /* 캠페인코드     */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) LIKE '캠페인%기간%' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_PERIOD                /* 1. 캠페인기간 */
                  , CASE WHEN UPPER(D.DATE_EXT_COLUMN_NM) IN (  'CAMP_FROM_DT1',  'CAMP_FROM_DT2' )  THEN
                              D.DATE_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMP_FROM_DT                   /* 캠페인행사시작일자 */
                  , CASE WHEN UPPER(D.DATE_EXT_COLUMN_NM) IN ( 'CAMP_TO_DT1',  'CAMP_TO_DT2' ) THEN
                              D.DATE_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMP_TO_DT                     /* 캠페인행사종료일자 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) IN (  'CAMP_FROM_TM1',  'CAMP_FROM_TM2' ) THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMP_FROM_TM                   /* 캠페인행사시작시간 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) IN ( 'CAMP_TO_TM1',  'CAMP_TO_TM2' ) THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMP_TO_TM                     /* 캠페인행사종료시간 */
                  , CASE WHEN UPPER(C.NUM_EXT_COLUMN_NM) IN ( 'SEND_DAY1', 'SEND_DAY2','SEND_DAY3' ) THEN
                              C.NUM_UDF_VAL
                         ELSE NULL
                    END                                                                AS SEND_DAY                       /* 전송일로부터의 일수 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'TARGET_ID' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS TARGET_ID                      /* 대상수준 */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) = '1. 데이터 전송방식' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS SENDDATE_TYPE                  /* 데이터 전송방식 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'OFFER_AUTO_YN' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS OFFER_AUTO_YN                  /* 오퍼 자동적용여부 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) IN ('CHANNEL_BATCH_RANK_YN', 'CHANNEL_MANUAL_RANK_YN', 'CHANNEL_TIME_RANK_YN') THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CHANNEL_BATCH_RANK_YN          /* 채널우선순위 */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) = '1. 캠페인 구분' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_GUBUN                  /* 캠페인 구분 */
                  , CASE WHEN UPPER(B.CHAR_UDF_NM) = '내부 상세' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_GUBUN_DTL                  /* 내부 상세 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'CAMPAIGN_TYPE' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_TYPE                   /* 캠페인 유형 */
                  , CASE WHEN UPPER(B.CHAR_EXT_COLUMN_NM) = 'CAMPAIGN_OFFER_COST_GUBUN' THEN
                              B.CHAR_UDF_VAL
                         ELSE NULL
                    END                                                                AS CAMPAIGN_OFFER_COST_GUBUN       /* 캠페인 오퍼 비용 구분 */

                  , A.CAMPAIGN_DESC                                                 AS CMPGN_DESC                          /* 캠페인설명   */
                  , A.LAST_MODIFIED_BY_USER_NM                                   AS REQ_EMP_ID                           /* 마지막 캠페인 실행자       */
              FROM CI_CAMPAIGN                  A
                   LEFT JOIN
                   CI_CAMP_PAGE_CHAR_UDF        B
                ON A.CAMPAIGN_SK = B.CAMPAIGN_SK
                   LEFT JOIN
                   CI_CAMP_PAGE_NUM_UDF         C
                ON A.CAMPAIGN_SK = C.CAMPAIGN_SK
                   LEFT JOIN
                   CI_CAMP_PAGE_DATE_UDF        D
                ON A.CAMPAIGN_SK = D.CAMPAIGN_SK
                   LEFT JOIN
                   CI_MARKETING_CELL            F
                ON A.CAMPAIGN_SK = F.CAMPAIGN_SK
             WHERE A.CAMPAIGN_SK = #{CAMPAIGNID}

          )
      GROUP BY  CMPGN_ID
  </select>

  <select id="CampaignInfo.getCICampaignProperyList" parameterType="Map" resultMap="CampaignListBO">
    SELECT CAMPAIGNID FROM
      CM_CAMPAIGN_DTL
    WHERE
      CAMPAIGNCODE LIKE 'CAMP%'
      AND CAMPAIGNID = #{CAMPAIGNID}
  </select>

  <insert id="CampaignInfo.insertOfferData" parameterType="Map">
      MERGE INTO cm_campaign_offer A
      USING (

             SELECT DISTINCT
                    T3.CAMPAIGN_CD           CAMPAIGNCODE
                  , T3.MARKETING_CELL_SK  CELLID
                  , T3.OFFER_CONTENT_ID
                  , T3.OFFER_SYS_CD
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN 'WO'  ELSE T2.OFFER_TYPE_CD END AS OFFER_TYPE_CD
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN 0 ELSE T2.OFFER_ID END AS OFFERID
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN '위너오퍼'  ELSE T2.DISP_NAME END AS DISP_NAME
                  , T2.CREATE_ID
                FROM (
                     SELECT CAMPAIGN_SK
                          , CAMPAIGN_CD AS CAMPAIGN_CD
                          , MARKETING_CELL_SK AS MARKETING_CELL_SK
                          , MAX(COMMUNICATION_SK) AS COMMUNICATION_SK
                          , MAX(OFFER_SYS_CD) AS OFFER_SYS_CD
                          , MAX(OFFER_CONTENT_ID) AS OFFER_CONTENT_ID
                          , MAX(OFFER_CONTENT_NM) AS OFFER_CONTENT_NM
                       FROM (
                            SELECT DISTINCT
                                   T6.CAMPAIGN_SK AS CAMPAIGN_SK
                                 , T6.CAMPAIGN_CD AS CAMPAIGN_CD
                                 , T6.MARKETING_CELL_SK AS MARKETING_CELL_SK
                                 , T6.COMMUNICATION_SK AS COMMUNICATION_SK
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_SYS_CD
                                 , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_ID
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_NM
                              FROM CI_CELL_PACKAGE T6
                              LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                                ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                              LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                                ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                         WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                               AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                              FROM CI_COMMUNICATION
                                                             WHERE DELETED_FLG = 'N' )
                               AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                            )
                            GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, MARKETING_CELL_SK
                )  T3
                LEFT JOIN CM_CAMPAIGN_CONTENTS_OFFERLIST T2
                  ON T3.OFFER_CONTENT_ID = T2.OFFER_CONTENT_ID(+)
          WHERE T3.OFFER_CONTENT_ID =0
              OR T2.OFFER_TYPE_CD = 'ZZ'
          ORDER BY T3.OFFER_CONTENT_ID

        ) B
      ON (      A.OFFER_CONTENT_ID  = B.OFFER_CONTENT_ID
            AND A.OFFERID = B.OFFERID
            AND A.FLOWCHARTID = #{CAMPAIGNID}
           )

      WHEN NOT MATCHED THEN
      INSERT (
                A.CELLID
               ,A.OFFERID
               ,A.OFFER_CONTENT_ID
               ,A.DISP_NAME
               ,A.OFFER_TYPE_CD
               ,A.OFFER_SYS_CD
               ,A.CAMPAIGNCODE
               ,A.FLOWCHARTID
               ,A.CREATE_ID
               ,A.CREATE_DT
      )
      VALUES (
               B.CELLID
              ,B.OFFERID
              ,B.OFFER_CONTENT_ID
              ,B.DISP_NAME
              ,B.OFFER_TYPE_CD
              ,B.OFFER_SYS_CD
              ,B.CAMPAIGNCODE
              ,TO_NUMBER(SUBSTR(TRIM(B.CAMPAIGNCODE),5))
              ,B.CREATE_ID
              ,SYSDATE
      )
  </insert>

  <update id="CampaignInfo.updateOfferData" parameterType="Map" >
      MERGE INTO cm_campaign_offer A
      USING (

             SELECT DISTINCT
                    T3.CAMPAIGN_CD           CAMPAIGNCODE
                  , T3.MARKETING_CELL_SK  CELLID
                  , T3.OFFER_CONTENT_ID
                  , T3.OFFER_SYS_CD
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN 'WO'  ELSE T2.OFFER_TYPE_CD END AS OFFER_TYPE_CD
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN 0 ELSE T2.OFFER_ID END AS OFFERID
                  , CASE WHEN T3.OFFER_CONTENT_ID =0 THEN '위너오퍼'  ELSE T2.DISP_NAME END AS DISP_NAME
                  , T2.CREATE_ID
                FROM (
                     SELECT CAMPAIGN_SK
                          , CAMPAIGN_CD AS CAMPAIGN_CD
                          , MARKETING_CELL_SK AS MARKETING_CELL_SK
                          , MAX(COMMUNICATION_SK) AS COMMUNICATION_SK
                          , MAX(OFFER_SYS_CD) AS OFFER_SYS_CD
                          , MAX(OFFER_CONTENT_ID) AS OFFER_CONTENT_ID
                          , MAX(OFFER_CONTENT_NM) AS OFFER_CONTENT_NM
                       FROM (
                            SELECT DISTINCT
                                   T6.CAMPAIGN_SK AS CAMPAIGN_SK
                                 , T6.CAMPAIGN_CD AS CAMPAIGN_CD
                                 , T6.MARKETING_CELL_SK AS MARKETING_CELL_SK
                                 , T6.COMMUNICATION_SK AS COMMUNICATION_SK
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_SYS_CD
                                 , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_ID
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_NM
                              FROM CI_CELL_PACKAGE T6
                              LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                                ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                              LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                                ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                         WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                               AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                              FROM CI_COMMUNICATION
                                                             WHERE DELETED_FLG = 'N' )
                               AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                            )
                            GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, MARKETING_CELL_SK
                )  T3
                LEFT JOIN CM_CAMPAIGN_CONTENTS_OFFERLIST T2
                  ON T3.OFFER_CONTENT_ID = T2.OFFER_CONTENT_ID(+)
          ORDER BY T3.OFFER_CONTENT_ID

        ) B
      ON (     A.OFFER_CONTENT_ID  = B.OFFER_CONTENT_ID
          AND A.OFFERID = B.OFFERID
          AND A.OFFER_CONTENT_ID ^=0 )

      WHEN MATCHED THEN
      UPDATE SET A.CELLID        = B.CELLID
                ,A.CAMPAIGNCODE         = B.CAMPAIGNCODE
                ,A.FLOWCHARTID          = TO_NUMBER(SUBSTR(TRIM(B.CAMPAIGNCODE),5))
                ,A.UPDATE_ID            = B.CREATE_ID
                ,A.UPDATE_DT            = SYSDATE
  </update>

  <update id="CampaignInfo.updateChannelData" parameterType="Map" >
      MERGE INTO cm_campaign_channel A
      USING (

             SELECT DISTINCT
                    T3.CAMPAIGN_CD           CAMPAIGNCODE
                  , T3.MARKETING_CELL_SK  CELLID
                  , T3.OFFER_CONTENT_ID
                  , T2.CREATE_ID
                FROM (
                     SELECT CAMPAIGN_SK
                          , MAX(CAMPAIGN_CD) AS CAMPAIGN_CD
                          , MAX(MARKETING_CELL_SK) AS MARKETING_CELL_SK
                          , MAX(COMMUNICATION_SK) AS COMMUNICATION_SK
                          , MAX(OFFER_CONTENT_ID) AS OFFER_CONTENT_ID
                          , MAX(OFFER_CONTENT_NM) AS OFFER_CONTENT_NM
                       FROM (
                            SELECT DISTINCT
                                   T6.CAMPAIGN_SK AS CAMPAIGN_SK
                                 , T6.CAMPAIGN_CD AS CAMPAIGN_CD
                                 , T6.MARKETING_CELL_SK AS MARKETING_CELL_SK
                                 , T6.COMMUNICATION_SK AS COMMUNICATION_SK
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_SYS_CD' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_SYS_CD
                                 , CASE WHEN UPPER(T7.NUM_EXT_COLUMN_NM) = 'OFFER_CONTENT_ID' THEN T7.NUM_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_ID
                                 , CASE WHEN UPPER(T5.CHAR_EXT_COLUMN_NM) = 'OFFER_CONTENT_NM' THEN T5.CHAR_UDF_VAL
                                        ELSE NULL
                                   END AS OFFER_CONTENT_NM
                              FROM CI_CELL_PACKAGE T6
                              LEFT JOIN CI_COMMUNICATION_CHAR_UDF T5
                                ON T6.COMMUNICATION_SK = T5.COMMUNICATION_SK
                              LEFT JOIN CI_COMMUNICATION_NUM_UDF T7
                                ON T6.COMMUNICATION_SK = T7.COMMUNICATION_SK
                                         WHERE T6.CAMPAIGN_SK = #{CAMPAIGNID}
                               AND T5.COMMUNICATION_SK IN ( SELECT COMMUNICATION_SK
                                                              FROM CI_COMMUNICATION
                                                             WHERE DELETED_FLG = 'N' )
                               AND ( T6.CONTROL_GROUP_TYPE_CD IS NULL OR T6.CONTROL_GROUP_TYPE_CD IN ('_CH','_CL') )
                            )
                            GROUP BY CAMPAIGN_SK, CAMPAIGN_CD, MARKETING_CELL_SK
                )  T3
                LEFT JOIN CM_CAMPAIGN_CONTENTS_OFFERLIST T2
                  ON T3.OFFER_CONTENT_ID = T2.OFFER_CONTENT_ID(+)
          ORDER BY T3.OFFER_CONTENT_ID

        ) B
      ON (     A.OFFER_CONTENT_ID  = B.OFFER_CONTENT_ID
            )

      WHEN MATCHED THEN
      UPDATE SET A.CELLID        = B.CELLID
                ,A.CAMPAIGNCODE         = B.CAMPAIGNCODE
                ,A.FLOWCHARTID          = TO_NUMBER(SUBSTR(TRIM(B.CAMPAIGNCODE),5))
                ,A.UPDATE_ID            = B.CREATE_ID
                ,A.UPDATE_DT            = SYSDATE
  </update>

  <update id="CampaignInfo.updateChannelData2" parameterType="Map" >
      MERGE INTO cm_campaign_channel T1

      USING (

   SELECT
    a.campaigncode
   ,a.camp_term_cd
   ,a.manual_trans_yn
   ,a.channel_priority_yn
   ,a.camp_bgn_dt
   ,a.camp_end_dt
   ,B.CELLID
   ,B.CHANNEL_CD
   ,b.toast_priority_rnk
   ,b.email_priority_rnk
   ,b.mobile_priority_rnk
   ,b.sms_priority_rnk
   ,b.lms_priority_rnk
   ,b.sms_disp_dt
   ,b.email_disp_dt
   ,b.mobile_disp_dt
   ,b.lms_disp_dt
   ,C.T1_CHANNEL_RNK
   ,C.T1_SMS_DISPTIME
   ,C.T2_CHANNEL_RNK
   ,C.T2_EMAIL_DISPTIME
   ,C.T3_CHANNEL_RNK
   ,C.T3_MOBILE_DISPTIME
   ,C.T4_CHANNEL_RNK
   ,C.T4_LMS_DISPTIME

   FROM TMSAS.CM_CAMPAIGN_DTL A , TMSAS.CM_CAMPAIGN_CHANNEL B , (
   SELECT T1.* , T2.* , T3.* , T4.*
   FROM ( SELECT

   C.COMM_CODE_ID  T1_COMM_CODE_ID
   ,C.CODE_ID      T1_CHANNEL_RNK
   ,C.CODE_NAME    T1_SMS_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C026'
   AND CODE_ID = '1'
         ) T1 ,

         ( SELECT

   C.COMM_CODE_ID    T2_COMM_CODE_ID
   ,C.CODE_ID        T2_CHANNEL_RNK
   ,C.CODE_NAME      T2_EMAIL_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C027'
   AND CODE_ID = '1'
         ) T2
         ,

         ( SELECT

   C.COMM_CODE_ID    T3_COMM_CODE_ID
   ,C.CODE_ID        T3_CHANNEL_RNK
   ,C.CODE_NAME      T3_MOBILE_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C028'
   AND CODE_ID = '1'
         ) T3
         ,

         ( SELECT

   C.COMM_CODE_ID    T4_COMM_CODE_ID
   ,C.CODE_ID        T4_CHANNEL_RNK
   ,C.CODE_NAME      T4_LMS_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C029'
   AND CODE_ID = '1'
         ) T4  ) C
   WHERE 1=1
   AND A.CAMPAIGNCODE = B.CAMPAIGNCODE
   AND A.manual_trans_yn = 'N'
   AND A.CAMP_TERM_CD = '01'
   AND A.CAMPAIGNID= #{CAMPAIGNID}

        ) T2
      ON (     T1.CAMPAIGNCODE  = T2.CAMPAIGNCODE
          AND T1.CELLID       = T2.CELLID
            AND T1.CHANNEL_CD  = T2.CHANNEL_CD
            AND T2.manual_trans_yn = 'N'
      AND T2.CAMP_TERM_CD = '01'
            )
      WHEN MATCHED THEN
      UPDATE
      SET T1.TOAST_PRIORITY_RNK   = CASE WHEN T1.CHANNEL_CD = 'TOAST'    THEN  '1' END
        , T1.SMS_PRIORITY_RNK     = CASE WHEN T1.CHANNEL_CD = 'SMS'      THEN  '1' END
        , T1.EMAIL_PRIORITY_RNK   = CASE WHEN T1.CHANNEL_CD = 'EMAIL'    THEN  '1' END
        , T1.MOBILE_PRIORITY_RNK  = CASE WHEN T1.CHANNEL_CD = 'MOBILE'   THEN  '1' END
        , T1.LMS_PRIORITY_RNK     = CASE WHEN T1.CHANNEL_CD = 'LMS'      THEN  '1' END

        , T1.SMS_DISP_DT          = CASE WHEN T1.CHANNEL_CD = 'SMS'    AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.EMAIL_DISP_DT        = CASE WHEN T1.CHANNEL_CD = 'EMAIL'  AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.MOBILE_DISP_DT       = CASE WHEN T1.CHANNEL_CD = 'MOBILE' AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.LMS_DISP_DT          = CASE WHEN T1.CHANNEL_CD = 'LMS'    AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END

        , T1.SMS_DISP_TIME          = CASE WHEN T1.CHANNEL_CD = 'SMS'      THEN  T2.T1_SMS_DISPTIME END
        , T1.EMAIL_DISP_TIME        = CASE WHEN T1.CHANNEL_CD = 'EMAIL'    THEN  T2.T2_EMAIL_DISPTIME END
        , T1.MOBILE_DISP_TIME       = CASE WHEN T1.CHANNEL_CD = 'MOBILE'   THEN  T2.T3_MOBILE_DISPTIME END
        , T1.LMS_DISP_TIME          = CASE WHEN T1.CHANNEL_CD = 'LMS'      THEN  T2.T4_LMS_DISPTIME END

        , T1.UPDATE_ID            = 9
        , T1.UPDATE_DT            = SYSDATE
  </update>

  <update id="CampaignInfo.updateChannelData3" parameterType="Map" >
      MERGE INTO cm_campaign_channel T1

      USING (

   SELECT
    a.campaigncode
   ,a.camp_term_cd
   ,a.manual_trans_yn
   ,a.channel_priority_yn
   ,a.camp_bgn_dt
   ,a.camp_end_dt
   ,B.CELLID
   ,B.CHANNEL_CD
   ,b.toast_priority_rnk
   ,b.email_priority_rnk
   ,b.mobile_priority_rnk
   ,b.sms_priority_rnk
   ,b.lms_priority_rnk
   ,b.sms_disp_dt
   ,b.email_disp_dt
   ,b.mobile_disp_dt
   ,b.lms_disp_dt
   ,C.T1_CHANNEL_RNK
   ,C.T1_SMS_DISPTIME
   ,C.T2_CHANNEL_RNK
   ,C.T2_EMAIL_DISPTIME
   ,C.T3_CHANNEL_RNK
   ,C.T3_MOBILE_DISPTIME
   ,C.T4_CHANNEL_RNK
   ,C.T4_LMS_DISPTIME

   FROM TMSAS.CM_CAMPAIGN_DTL A , TMSAS.CM_CAMPAIGN_CHANNEL B , (
   SELECT T1.* , T2.* , T3.* , T4.*
   FROM ( SELECT

   C.COMM_CODE_ID  T1_COMM_CODE_ID
   ,C.CODE_ID      T1_CHANNEL_RNK
   ,C.CODE_NAME    T1_SMS_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C026'
   AND CODE_ID = 'N'
         ) T1 ,

         ( SELECT

   C.COMM_CODE_ID    T2_COMM_CODE_ID
   ,C.CODE_ID        T2_CHANNEL_RNK
   ,C.CODE_NAME      T2_EMAIL_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C027'
   AND CODE_ID = 'N'
         ) T2
         ,

         ( SELECT

   C.COMM_CODE_ID    T3_COMM_CODE_ID
   ,C.CODE_ID        T3_CHANNEL_RNK
   ,C.CODE_NAME      T3_MOBILE_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C028'
   AND CODE_ID = 'N'
         ) T3
         ,

         ( SELECT

   C.COMM_CODE_ID    T4_COMM_CODE_ID
   ,C.CODE_ID        T4_CHANNEL_RNK
   ,C.CODE_NAME      T4_LMS_DISPTIME
   FROM  TMSAS.CM_CODE_DTL C
   WHERE 1=1
   AND C.COMM_CODE_ID = 'C029'
   AND CODE_ID = 'N'
         ) T4  ) C
   WHERE 1=1
   AND A.CAMPAIGNCODE = B.CAMPAIGNCODE
   AND A.manual_trans_yn = 'Y'
   AND A.CAMP_TERM_CD = '01'
   AND A.CAMPAIGNID= #{CAMPAIGNID}

        ) T2
      ON (     T1.CAMPAIGNCODE  = T2.CAMPAIGNCODE
          AND T1.CELLID      = T2.CELLID
            AND T1.CHANNEL_CD  = T2.CHANNEL_CD
            AND T2.manual_trans_yn = 'Y'
      AND T2.CAMP_TERM_CD = '01'
            )
      WHEN MATCHED THEN
      UPDATE
      SET
          T1.SMS_DISP_DT          = CASE WHEN T1.CHANNEL_CD = 'SMS'    AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.EMAIL_DISP_DT        = CASE WHEN T1.CHANNEL_CD = 'EMAIL'  AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.MOBILE_DISP_DT       = CASE WHEN T1.CHANNEL_CD = 'MOBILE' AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END
        , T1.LMS_DISP_DT          = CASE WHEN T1.CHANNEL_CD = 'LMS'    AND T1.MOBILE_DISP_DT IS NOT NULL THEN T1.MOBILE_DISP_DT ELSE T2.camp_bgn_dt END

        , T1.SMS_DISP_TIME          = CASE WHEN T1.CHANNEL_CD = 'SMS'      THEN  T2.T1_SMS_DISPTIME END
        , T1.EMAIL_DISP_TIME        = CASE WHEN T1.CHANNEL_CD = 'EMAIL'    THEN  T2.T2_EMAIL_DISPTIME END
        , T1.MOBILE_DISP_TIME       = CASE WHEN T1.CHANNEL_CD = 'MOBILE'   THEN  T2.T3_MOBILE_DISPTIME END
        , T1.LMS_DISP_TIME          = CASE WHEN T1.CHANNEL_CD = 'LMS'      THEN  T2.T4_LMS_DISPTIME END

        , T1.UPDATE_ID            = 9
        , T1.UPDATE_DT            = SYSDATE
  </update>

	<!-- 목표대비 달성율 -->
	<select id="CampaignInfo.getCampaignRptRsltCrmMonth" parameterType="Map" resultMap="CampaignRptRsltCrmMonthBO">
	<![CDATA[
		SELECT
			A.CUST_GOAL AS CUST_GOAL
			, A.AMT_GOAL AS AMT_GOAL
			, A.DIS_GOAL AS DIS_GOAL
			, A.PURE_AMT_GOAL AS PURE_AMT_GOAL
		FROM(
			SELECT
				TT0.STD_MON   AS STD_MON
				,to_char(ROUND((TT5.rspn_cust_cnt/TT0.TAGT_CUST)*100.0, 1)) AS CUST_GOAL
				,to_char(ROUND((TT5.cmpn_sum_amt/TT0.TAGT_AMT)*100.0, 1)) AS AMT_GOAL
				,to_char(ROUND((TT5.cmpn_sum_cost/TT0.TAGT_DIS)*100.0, 1)) AS DIS_GOAL
				,to_char(ROUND((TT5.cmpn_net_amt/TT0.TAGT_LIFT)*100.0, 1)) AS PURE_AMT_GOAL
			FROM TAGT_CRM_MONTHLY TT0
				, CM_RPT_RSLT_CRM_MONTH TT5
			WHERE
				TT0.STD_MON=TT5.STD_MON
			ORDER BY
				STD_MON DESC
		) A
		WHERE ROWNUM = 1
	]]>
	</select>

	<!-- 11번가 침투율 -->
	<select id="CampaignInfo.getCampaignRptPtCrmMonth" parameterType="Map" resultMap="CampaignRptPtCrmMonthBO">
	<![CDATA[
		SELECT
			A.PT_CUST_CNT       AS PT_CUST_CNT
			, A.TOT_CUST_CNT        AS TOT_CUST_CNT
			, A.PT_CMPN_AMT         AS PT_CMPN_AMT
			, A.TOT_AMT             AS TOT_AMT
			, A.PT_CMPN_COST        AS PT_CMPN_COST
			, A.TOT_DC_AMT          AS TOT_DC_AMT
			, A.PT_COST_RATIO       AS PT_COST_RATIO
			, A.TOT_RATIO           AS TOT_RATIO
			, A.PT_NET_AMT          AS PT_NET_AMT
			, A.TOT_NET_AMT         AS TOT_NET_AMT
		FROM
			(
				SELECT
					PT_CUST_CNT       AS PT_CUST_CNT
					, TOT_CUST_CNT        AS TOT_CUST_CNT
					, PT_CMPN_AMT         AS PT_CMPN_AMT
					, TOT_AMT             AS TOT_AMT
					, PT_CMPN_COST        AS PT_CMPN_COST
					, TOT_DC_AMT          AS TOT_DC_AMT
					, PT_COST_RATIO       AS PT_COST_RATIO
					, TOT_RATIO           AS TOT_RATIO
					, PT_NET_AMT          AS PT_NET_AMT
					, TOT_NET_AMT         AS TOT_NET_AMT
				FROM
					CM_RPT_PT_CRM_MONTH
				ORDER
					BY STD_MON DESC
			)A
		WHERE ROWNUM = 1
	]]>
	</select>

	<!-- 캠페인 결제 거래액 추이 -->
	<select id="CampaignInfo.getCampaignRptSumSales" parameterType="Map" resultMap="CampaignRptSumSalesBO">
	<![CDATA[
		SELECT
			to_char(to_date(CAMP_BGN_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD')   AS CAMP_BGN_DT
			, ROUND(SALE_AMT/1000000)                                                  AS SALE_AMT /* KANG-20190314 */
		FROM
			CM_RPT_SUM_SALES
		ORDER BY 1 ASC            /* KANG-20190314 */
	]]>
	</select>


</mapper>
